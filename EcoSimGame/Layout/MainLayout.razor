@inherits LayoutComponentBase
@implements IDisposable
@inject ILocalStorageService localStorage
@inject Services.ProductionService production
@inject Services.GameStateService game
@inject Services.MarketService market
@using Blazored.LocalStorage
@using EcoSimGame.Models

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <div class="user-info">
                <span><strong>@game.Player.Name</strong></span> |
                <span>Pieniądze: <strong>@game.Player.Money</strong></span> |
                <span>Pojemność magazynu: <strong>@game.Player.GetCurrentInventorySize() / @game.Player.WarehouseCapacity</strong></span> |
                <span>Energia: <strong>@game.Energy.CurrentEnergy / @game.Energy.MaxEnergy</strong></span> |
                <span>Poziom: <strong>@game.Player.Level</strong></span> |
                <span>EXP: <strong>@game.Player.Experience / @game.Player.GetExperienceForNextLevel(game.Player.Level + 1)</strong></span>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await market.InitializeAsync();
        await game.Load();
        game.OnUpdate += StateHasChanged;
    }

    public void Dispose()
    {
        game.OnUpdate -= StateHasChanged;
    }
}

@page "/Warehouse"
@using EcoSimGame.Models
@inject Services.GameStateService game

<p><strong>Pojemność magazynu:</strong> @game.Player.GetCurrentInventorySize() / @game.Player.WarehouseCapacity</p>
<progress class="inventory-bar" max="@game.Player.WarehouseCapacity" value="@game.Player.GetCurrentInventorySize()"></progress>

@if (game.Player.Inventory.GetAllWithQuantity().Count > 0)
{
    <div class="warehouse-columns">
        @foreach (var group in inventoryGroups)
        {
            <div class="warehouse-column">
                <h4>@group.Key</h4>
                @foreach (var name in group.Value)
                {
                    var quantity = game.Player.Inventory.GetQuantity(name);
                    if (quantity > 0)
                    {
                        <div class="material-row">
                            <img src=@($"images/materials/{GetImageName(name)}.png") alt="@name" class="material-icon" />
                            <span><strong>@name:</strong> @quantity sztuk</span>
                        </div>
                    }
                }
            </div>
        }
    </div>
}
else
{
    <p>Magazyn jest pusty.</p>
}

@code {
    private readonly Dictionary<string, List<string>> inventoryGroups = new()
        {
            ["Surowce"] = new()
        {
            "Ruda żelaza", "Ruda miedzi", "Ruda krzemu", "Ruda litu", "Ropa naftowa", "Włókno węglowe"
        },
            ["Materiały przetworzone"] = new()
        {
            "Sztabka żelaza", "Sztabka miedzi", "Sztabka krzemu", "Sztabka litu", "Plastik", "Kompozyt węglowy"
        },
            ["Produkty"] = new()
        {
            "Silnik główny", "Komora spalania", "Płyta główna", "Moduł pamięci",
            "Stal konstrukcyjna", "Powłoka antykorozyjna", "Panel kompozytowy", "Stelaż wewnętrzny"
        },
            ["Komponenty"] = new()
        {
            "Napęd rakietowy", "Komputer pokładowy", "Zbiornik paliwa", "Kadłub rakiety"
        },
            ["Produkt końcowy"] = new()
        {
            "Rakieta kosmiczna"
        }
        };

    protected override void OnInitialized() => game.OnUpdate += StateHasChanged;

    public void Dispose() => game.OnUpdate -= StateHasChanged;


    private string GetImageName(string name) =>
        name.ToLower()
            .Replace(" ", "")
            .Replace("ż", "z").Replace("ó", "o").Replace("ł", "l")
            .Replace("ć", "c").Replace("ś", "s").Replace("ą", "a")
            .Replace("ę", "e").Replace("ź", "z").Replace("ń", "n");
}
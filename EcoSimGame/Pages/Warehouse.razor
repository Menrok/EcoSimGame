@page "/Warehouse"
@using Blazored.LocalStorage
@using EcoSimGame.Models
@inject ILocalStorageService localStorage

<h3>Magazyn</h3>

@if (player != null)
{
    <p><strong>Pojemność magazynu:</strong> @player.GetCurrentInventorySize() / @player.WarehouseCapacity</p>

    <progress max="@player.WarehouseCapacity" value="@player.GetCurrentInventorySize()" style="width: 100%; height: 20px;"></progress>

    @if (player.Inventory.GetAllWithQuantity().Count > 0)
    {
        <div style="margin-top: 1em;">
            @foreach (var stock in player.Inventory.GetAllWithQuantity())
            {
                <p><strong>@stock.MaterialName:</strong> @stock.Quantity sztuk</p>
            }
        </div>
    }
    else
    {
        <p>Magazyn jest pusty.</p>
    }

    <div style="margin-top: 2em;">
        <p><strong>Koszt ulepszenia:</strong> @player.WarehouseUpgradeCost</p>
        <button @onclick="UpgradeWarehouse" disabled="@(player.Money < player.WarehouseUpgradeCost)">
            Ulepsz magazyn
        </button>
    </div>
}
else
{
    <p>Ładowanie danych...</p>
}

@code {
    private Player player = new Player();

    protected override async Task OnInitializedAsync()
    {
        var storedPlayer = await localStorage.GetItemAsync<Player>("player");
        if (storedPlayer != null)
        {
            player = storedPlayer;
        }
    }

    private async Task UpgradeWarehouse()
    {
        if (player.UpgradeWarehouse())
        {
            await localStorage.SetItemAsync("player", player);
        }
    }
}

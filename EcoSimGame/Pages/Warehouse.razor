@page "/Warehouse"
@using EcoSimGame.Models
@inject Services.GameStateService game

<h3>Magazyn</h3>

<p><strong>Pojemność magazynu:</strong> @game.Player.GetCurrentInventorySize() / @game.Player.WarehouseCapacity</p>

<progress class="inventory-bar" max="@game.Player.WarehouseCapacity" value="@game.Player.GetCurrentInventorySize()"></progress>

@if (game.Player.Inventory.GetAllWithQuantity().Count > 0)
{
    <div class="warehouse-container">
        @foreach (var stock in game.Player.Inventory.GetAllWithQuantity())
        {
            var imageName = stock.MaterialName.ToLower()
            .Replace(" ", "")
            .Replace("ż", "z").Replace("ó", "o").Replace("ł", "l")
            .Replace("ć", "c").Replace("ś", "s").Replace("ą", "a")
            .Replace("ę", "e").Replace("ź", "z").Replace("ń", "n");

            <div class="material-row">
                <img src="images/materials/@(imageName).png" alt="@stock.MaterialName" class="material-icon" />
                <span><strong>@stock.MaterialName:</strong> @stock.Quantity sztuk</span>
            </div>
        }
    </div>

}
else
{
    <p>Magazyn jest pusty.</p>
}

@code {
    protected override void OnInitialized()
    {
        game.OnUpdate += StateHasChanged;
    }

    public void Dispose()
    {
        game.OnUpdate -= StateHasChanged;
    }
}
